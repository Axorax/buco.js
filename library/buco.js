let https=require("https"),http=require("http");export const buco={get(e,t){let n=new URL(e),r=new Promise((e,r)=>{let o={method:"GET",hostname:n.host,path:n.pathname+n.search,...t};function s(e){console.error(e),r("Something went wrong...")}function a(t){let n="";t.on("data",e=>{n+=e}),t.on("end",()=>{try{"json"in o&&!0==o.json&&(n=JSON.parse(n)),e(n)}catch(t){s(t)}})}Boolean("headers"in o)?Boolean("User-Agent"in o.headers)||(o.headers["User-Agent"]="buco-js"):(o.headers={},o.headers["User-Agent"]="buco-js"),"https:"==n.protocol?https.get(o,e=>{a(e)}).on("error",e=>{s(e)}):http.get(o,e=>{a(e)}).on("error",e=>{s(e)})});return r.json=async function(){let e=await this;return JSON.parse(e)},r},post:function(e,t){let n=new Promise((n,r)=>{let o=new URL(e),s={method:"POST",hostname:o.host,path:o.pathname+o.search,...t};function a(e){let t="";e.on("data",e=>t+=e),e.on("end",()=>{try{"json"in s&&!0==s.json?t=JSON.parse(t):"application/json"===e.headers["content-type"]&&(t=JSON.parse(t)),n(t)}catch(r){request_error(r)}})}if(Boolean("headers"in s)?Boolean("User-Agent"in s.headers)||(s.headers["User-Agent"]="buco-js"):(s.headers={},s.headers["User-Agent"]="buco-js"),"https:"==o.protocol){let h=https.request(s,e=>{a(e)});h.on("error",r),s.body&&h.write(s.body),h.end()}else{let p=http.request(s,e=>{a(e)});p.on("error",r),s.body&&p.write(s.body),p.end()}});return n.json=async function(){let e=await this;return JSON.parse(e)},n}};export default buco